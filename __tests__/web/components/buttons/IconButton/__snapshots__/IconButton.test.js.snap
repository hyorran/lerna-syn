// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<IconButton /> asCreate top size="none" onTable withOpacity 1`] = `
<WithStyles(IconButton)
  asCreate={true}
  asLight={true}
  btnClass="test"
  onTable={true}
  placement="top"
  roleStyle="success"
  shadow={true}
  size="none"
  withOpacity={true}
>
  <IconButton
    asCreate={true}
    asLight={true}
    btnClass="test"
    btnProps={Object {}}
    classes={
      Object {
        "btnCreate": "IconButton-btnCreate-4",
        "btnLight": "IconButton-btnLight-12",
        "btnShadow": "IconButton-btnShadow-5",
        "btnTable": "IconButton-btnTable-11",
        "btnTransparentWhite": "IconButton-btnTransparentWhite-9",
        "colorSecondary": "IconButton-colorSecondary-13",
        "error": "IconButton-error-16",
        "generic": "IconButton-generic-17",
        "iconButtonMarginHorizontal": "IconButton-iconButtonMarginHorizontal-3",
        "iconButtonMarginVertical": "IconButton-iconButtonMarginVertical-2",
        "mini": "IconButton-mini-8",
        "none": "IconButton-none-10",
        "root": "IconButton-root-1",
        "secondaryButton": "IconButton-secondaryButton-18",
        "secondaryInverseButton": "IconButton-secondaryInverseButton-19",
        "spanIconButton": "IconButton-spanIconButton-7",
        "success": "IconButton-success-14",
        "warning": "IconButton-warning-15",
        "withOpacity": "IconButton-withOpacity-6",
      }
    }
    debounce={200}
    debounceReverse={false}
    disabled={false}
    loading={false}
    marginHorizontal={true}
    marginVertical={false}
    onClick={[Function]}
    onTable={true}
    placement="top"
    popover={false}
    popoverProps={Object {}}
    roleStyle="success"
    shadow={true}
    size="none"
    tooltip={null}
    type="button"
    withOpacity={true}
  >
    <div
      className="IconButton-iconButtonMarginHorizontal-3 "
    >
      <span
        aria-haspopup="false"
        aria-owns={null}
        className="IconButton-spanIconButton-7"
        key="iconButton"
      >
        <WithStyles(IconButton)
          className="IconButton-btnCreate-4 IconButton-btnLight-12 IconButton-btnShadow-5 IconButton-none-10 IconButton-btnTable-11 IconButton-withOpacity-6 test IconButton-success-14 top"
          debounce={200}
          disabled={false}
          onClick={[Function]}
          placement="top"
          size="none"
          tooltip={null}
          type="button"
        >
          <IconButton
            className="IconButton-btnCreate-4 IconButton-btnLight-12 IconButton-btnShadow-5 IconButton-none-10 IconButton-btnTable-11 IconButton-withOpacity-6 test IconButton-success-14 top"
            classes={
              Object {
                "colorInherit": "MuiIconButton-colorInherit-21",
                "colorPrimary": "MuiIconButton-colorPrimary-22",
                "colorSecondary": "MuiIconButton-colorSecondary-23",
                "disabled": "MuiIconButton-disabled-24",
                "label": "MuiIconButton-label-25",
                "root": "MuiIconButton-root-20",
              }
            }
            color="default"
            debounce={200}
            disabled={false}
            onClick={[Function]}
            placement="top"
            size="none"
            tooltip={null}
            type="button"
          >
            <WithStyles(ButtonBase)
              centerRipple={true}
              className="MuiIconButton-root-20 IconButton-btnCreate-4 IconButton-btnLight-12 IconButton-btnShadow-5 IconButton-none-10 IconButton-btnTable-11 IconButton-withOpacity-6 test IconButton-success-14 top"
              debounce={200}
              disabled={false}
              focusRipple={true}
              onClick={[Function]}
              placement="top"
              size="none"
              tooltip={null}
              type="button"
            >
              <ButtonBase
                centerRipple={true}
                className="MuiIconButton-root-20 IconButton-btnCreate-4 IconButton-btnLight-12 IconButton-btnShadow-5 IconButton-none-10 IconButton-btnTable-11 IconButton-withOpacity-6 test IconButton-success-14 top"
                classes={
                  Object {
                    "disabled": "MuiButtonBase-disabled-27",
                    "focusVisible": "MuiButtonBase-focusVisible-28",
                    "root": "MuiButtonBase-root-26",
                  }
                }
                component="button"
                debounce={200}
                disableRipple={false}
                disableTouchRipple={false}
                disabled={false}
                focusRipple={true}
                onClick={[Function]}
                placement="top"
                size="none"
                tabIndex="0"
                tooltip={null}
                type="button"
              >
                <button
                  className="MuiButtonBase-root-26 MuiIconButton-root-20 IconButton-btnCreate-4 IconButton-btnLight-12 IconButton-btnShadow-5 IconButton-none-10 IconButton-btnTable-11 IconButton-withOpacity-6 test IconButton-success-14 top"
                  debounce={200}
                  disabled={false}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onContextMenu={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  onTouchEnd={[Function]}
                  onTouchMove={[Function]}
                  onTouchStart={[Function]}
                  placement="top"
                  size="none"
                  tabIndex="0"
                  tooltip={null}
                  type="button"
                >
                  <span
                    className="MuiIconButton-label-25"
                  >
                    <pure(FiberManualRecordIcon)>
                      <FiberManualRecordIcon>
                        <WithStyles(SvgIcon)>
                          <SvgIcon
                            classes={
                              Object {
                                "colorAction": "MuiSvgIcon-colorAction-47",
                                "colorDisabled": "MuiSvgIcon-colorDisabled-49",
                                "colorError": "MuiSvgIcon-colorError-48",
                                "colorPrimary": "MuiSvgIcon-colorPrimary-45",
                                "colorSecondary": "MuiSvgIcon-colorSecondary-46",
                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-50",
                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-52",
                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-51",
                                "root": "MuiSvgIcon-root-44",
                              }
                            }
                            color="inherit"
                            component="svg"
                            fontSize="default"
                            viewBox="0 0 24 24"
                          >
                            <svg
                              aria-hidden="true"
                              className="MuiSvgIcon-root-44"
                              focusable="false"
                              role="presentation"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M24 24H0V0h24v24z"
                                fill="none"
                              />
                              <circle
                                cx="12"
                                cy="12"
                                r="8"
                              />
                            </svg>
                          </SvgIcon>
                        </WithStyles(SvgIcon)>
                      </FiberManualRecordIcon>
                    </pure(FiberManualRecordIcon)>
                  </span>
                  <NoSsr
                    defer={false}
                    fallback={null}
                  >
                    <WithStyles(TouchRipple)
                      center={true}
                      innerRef={[Function]}
                    >
                      <TouchRipple
                        center={true}
                        classes={
                          Object {
                            "child": "MuiTouchRipple-child-33",
                            "childLeaving": "MuiTouchRipple-childLeaving-34",
                            "childPulsate": "MuiTouchRipple-childPulsate-35",
                            "ripple": "MuiTouchRipple-ripple-30",
                            "ripplePulsate": "MuiTouchRipple-ripplePulsate-32",
                            "rippleVisible": "MuiTouchRipple-rippleVisible-31",
                            "root": "MuiTouchRipple-root-29",
                          }
                        }
                      >
                        <TransitionGroup
                          childFactory={[Function]}
                          className="MuiTouchRipple-root-29"
                          component="span"
                          enter={true}
                          exit={true}
                        >
                          <span
                            className="MuiTouchRipple-root-29"
                          />
                        </TransitionGroup>
                      </TouchRipple>
                    </WithStyles(TouchRipple)>
                  </NoSsr>
                </button>
              </ButtonBase>
            </WithStyles(ButtonBase)>
          </IconButton>
        </WithStyles(IconButton)>
      </span>
    </div>
  </IconButton>
</WithStyles(IconButton)>
`;

exports[`<IconButton /> rendered 1`] = `
<WithStyles(IconButton)>
  <IconButton
    asCreate={false}
    asLight={false}
    btnClass={null}
    btnProps={Object {}}
    classes={
      Object {
        "btnCreate": "IconButton-btnCreate-4",
        "btnLight": "IconButton-btnLight-12",
        "btnShadow": "IconButton-btnShadow-5",
        "btnTable": "IconButton-btnTable-11",
        "btnTransparentWhite": "IconButton-btnTransparentWhite-9",
        "colorSecondary": "IconButton-colorSecondary-13",
        "error": "IconButton-error-16",
        "generic": "IconButton-generic-17",
        "iconButtonMarginHorizontal": "IconButton-iconButtonMarginHorizontal-3",
        "iconButtonMarginVertical": "IconButton-iconButtonMarginVertical-2",
        "mini": "IconButton-mini-8",
        "none": "IconButton-none-10",
        "root": "IconButton-root-1",
        "secondaryButton": "IconButton-secondaryButton-18",
        "secondaryInverseButton": "IconButton-secondaryInverseButton-19",
        "spanIconButton": "IconButton-spanIconButton-7",
        "success": "IconButton-success-14",
        "warning": "IconButton-warning-15",
        "withOpacity": "IconButton-withOpacity-6",
      }
    }
    debounce={200}
    debounceReverse={false}
    disabled={false}
    loading={false}
    marginHorizontal={true}
    marginVertical={false}
    onClick={[Function]}
    onTable={false}
    placement="bottom"
    popover={false}
    popoverProps={Object {}}
    roleStyle={null}
    shadow={false}
    size="normal"
    tooltip={null}
    type="button"
    withOpacity={false}
  >
    <div
      className="IconButton-iconButtonMarginHorizontal-3 "
    >
      <span
        aria-haspopup="false"
        aria-owns={null}
        className="IconButton-spanIconButton-7"
        key="iconButton"
      >
        <WithStyles(IconButton)
          className="bottom"
          debounce={200}
          disabled={false}
          onClick={[Function]}
          placement="bottom"
          size="normal"
          tooltip={null}
          type="button"
        >
          <IconButton
            className="bottom"
            classes={
              Object {
                "colorInherit": "MuiIconButton-colorInherit-21",
                "colorPrimary": "MuiIconButton-colorPrimary-22",
                "colorSecondary": "MuiIconButton-colorSecondary-23",
                "disabled": "MuiIconButton-disabled-24",
                "label": "MuiIconButton-label-25",
                "root": "MuiIconButton-root-20",
              }
            }
            color="default"
            debounce={200}
            disabled={false}
            onClick={[Function]}
            placement="bottom"
            size="normal"
            tooltip={null}
            type="button"
          >
            <WithStyles(ButtonBase)
              centerRipple={true}
              className="MuiIconButton-root-20 bottom"
              debounce={200}
              disabled={false}
              focusRipple={true}
              onClick={[Function]}
              placement="bottom"
              size="normal"
              tooltip={null}
              type="button"
            >
              <ButtonBase
                centerRipple={true}
                className="MuiIconButton-root-20 bottom"
                classes={
                  Object {
                    "disabled": "MuiButtonBase-disabled-27",
                    "focusVisible": "MuiButtonBase-focusVisible-28",
                    "root": "MuiButtonBase-root-26",
                  }
                }
                component="button"
                debounce={200}
                disableRipple={false}
                disableTouchRipple={false}
                disabled={false}
                focusRipple={true}
                onClick={[Function]}
                placement="bottom"
                size="normal"
                tabIndex="0"
                tooltip={null}
                type="button"
              >
                <button
                  className="MuiButtonBase-root-26 MuiIconButton-root-20 bottom"
                  debounce={200}
                  disabled={false}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onContextMenu={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  onTouchEnd={[Function]}
                  onTouchMove={[Function]}
                  onTouchStart={[Function]}
                  placement="bottom"
                  size="normal"
                  tabIndex="0"
                  tooltip={null}
                  type="button"
                >
                  <span
                    className="MuiIconButton-label-25"
                  />
                  <NoSsr
                    defer={false}
                    fallback={null}
                  >
                    <WithStyles(TouchRipple)
                      center={true}
                      innerRef={[Function]}
                    >
                      <TouchRipple
                        center={true}
                        classes={
                          Object {
                            "child": "MuiTouchRipple-child-33",
                            "childLeaving": "MuiTouchRipple-childLeaving-34",
                            "childPulsate": "MuiTouchRipple-childPulsate-35",
                            "ripple": "MuiTouchRipple-ripple-30",
                            "ripplePulsate": "MuiTouchRipple-ripplePulsate-32",
                            "rippleVisible": "MuiTouchRipple-rippleVisible-31",
                            "root": "MuiTouchRipple-root-29",
                          }
                        }
                      >
                        <TransitionGroup
                          childFactory={[Function]}
                          className="MuiTouchRipple-root-29"
                          component="span"
                          enter={true}
                          exit={true}
                        >
                          <span
                            className="MuiTouchRipple-root-29"
                          />
                        </TransitionGroup>
                      </TouchRipple>
                    </WithStyles(TouchRipple)>
                  </NoSsr>
                </button>
              </ButtonBase>
            </WithStyles(ButtonBase)>
          </IconButton>
        </WithStyles(IconButton)>
      </span>
    </div>
  </IconButton>
</WithStyles(IconButton)>
`;

exports[`<IconButton /> test tooltip rendered 1`] = `
<WithStyles(IconButton)
  tooltip="test"
>
  <IconButton
    asCreate={false}
    asLight={false}
    btnClass={null}
    btnProps={Object {}}
    classes={
      Object {
        "btnCreate": "IconButton-btnCreate-4",
        "btnLight": "IconButton-btnLight-12",
        "btnShadow": "IconButton-btnShadow-5",
        "btnTable": "IconButton-btnTable-11",
        "btnTransparentWhite": "IconButton-btnTransparentWhite-9",
        "colorSecondary": "IconButton-colorSecondary-13",
        "error": "IconButton-error-16",
        "generic": "IconButton-generic-17",
        "iconButtonMarginHorizontal": "IconButton-iconButtonMarginHorizontal-3",
        "iconButtonMarginVertical": "IconButton-iconButtonMarginVertical-2",
        "mini": "IconButton-mini-8",
        "none": "IconButton-none-10",
        "root": "IconButton-root-1",
        "secondaryButton": "IconButton-secondaryButton-18",
        "secondaryInverseButton": "IconButton-secondaryInverseButton-19",
        "spanIconButton": "IconButton-spanIconButton-7",
        "success": "IconButton-success-14",
        "warning": "IconButton-warning-15",
        "withOpacity": "IconButton-withOpacity-6",
      }
    }
    debounce={200}
    debounceReverse={false}
    disabled={false}
    loading={false}
    marginHorizontal={true}
    marginVertical={false}
    onClick={[Function]}
    onTable={false}
    placement="bottom"
    popover={false}
    popoverProps={Object {}}
    roleStyle={null}
    shadow={false}
    size="normal"
    tooltip="test"
    type="button"
    withOpacity={false}
  >
    <div
      className="IconButton-iconButtonMarginHorizontal-3 "
    >
      <WithStyles(Tooltip)
        TransitionComponent={[Function]}
        enterDelay={500}
        placement="bottom"
        title="test"
      >
        <Tooltip
          TransitionComponent={[Function]}
          classes={
            Object {
              "popper": "MuiTooltip-popper-36",
              "popperInteractive": "MuiTooltip-popperInteractive-37",
              "tooltip": "MuiTooltip-tooltip-38",
              "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom-43",
              "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft-40",
              "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight-41",
              "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop-42",
              "touch": "MuiTooltip-touch-39",
            }
          }
          disableFocusListener={false}
          disableHoverListener={false}
          disableTouchListener={false}
          enterDelay={500}
          enterTouchDelay={1000}
          interactive={false}
          leaveDelay={0}
          leaveTouchDelay={1500}
          placement="bottom"
          theme={
            Object {
              "breakpoints": Object {
                "between": [Function],
                "down": [Function],
                "keys": Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ],
                "only": [Function],
                "up": [Function],
                "values": Object {
                  "lg": 1280,
                  "md": 960,
                  "sm": 600,
                  "xl": 1920,
                  "xs": 0,
                },
                "width": [Function],
              },
              "direction": "ltr",
              "mixins": Object {
                "gutters": [Function],
                "toolbar": Object {
                  "@media (min-width:0px) and (orientation: landscape)": Object {
                    "minHeight": 48,
                  },
                  "@media (min-width:600px)": Object {
                    "minHeight": 64,
                  },
                  "minHeight": 56,
                },
              },
              "overrides": Object {},
              "palette": Object {
                "action": Object {
                  "active": "rgba(0, 0, 0, 0.54)",
                  "disabled": "rgba(0, 0, 0, 0.26)",
                  "disabledBackground": "rgba(0, 0, 0, 0.12)",
                  "hover": "rgba(0, 0, 0, 0.08)",
                  "hoverOpacity": 0.08,
                  "selected": "rgba(0, 0, 0, 0.14)",
                },
                "augmentColor": [Function],
                "background": Object {
                  "default": "#fafafa",
                  "paper": "#fff",
                },
                "common": Object {
                  "black": "#000",
                  "white": "#fff",
                },
                "contrastThreshold": 3,
                "divider": "rgba(0, 0, 0, 0.12)",
                "error": Object {
                  "contrastText": "#fff",
                  "dark": "#d32f2f",
                  "light": "#e57373",
                  "main": "#f44336",
                },
                "getContrastText": [Function],
                "grey": Object {
                  "100": "#f5f5f5",
                  "200": "#eeeeee",
                  "300": "#e0e0e0",
                  "400": "#bdbdbd",
                  "50": "#fafafa",
                  "500": "#9e9e9e",
                  "600": "#757575",
                  "700": "#616161",
                  "800": "#424242",
                  "900": "#212121",
                  "A100": "#d5d5d5",
                  "A200": "#aaaaaa",
                  "A400": "#303030",
                  "A700": "#616161",
                },
                "primary": Object {
                  "contrastText": "#fff",
                  "dark": "#303f9f",
                  "light": "#7986cb",
                  "main": "#3f51b5",
                },
                "secondary": Object {
                  "contrastText": "#fff",
                  "dark": "#c51162",
                  "light": "#ff4081",
                  "main": "#f50057",
                },
                "text": Object {
                  "disabled": "rgba(0, 0, 0, 0.38)",
                  "hint": "rgba(0, 0, 0, 0.38)",
                  "primary": "rgba(0, 0, 0, 0.87)",
                  "secondary": "rgba(0, 0, 0, 0.54)",
                },
                "tonalOffset": 0.2,
                "type": "light",
              },
              "props": Object {},
              "shadows": Array [
                "none",
                "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
              ],
              "shape": Object {
                "borderRadius": 4,
              },
              "spacing": Object {
                "unit": 8,
              },
              "transitions": Object {
                "create": [Function],
                "duration": Object {
                  "complex": 375,
                  "enteringScreen": 225,
                  "leavingScreen": 195,
                  "short": 250,
                  "shorter": 200,
                  "shortest": 150,
                  "standard": 300,
                },
                "easing": Object {
                  "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                  "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                  "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                  "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                },
                "getAutoHeightDuration": [Function],
              },
              "typography": Object {
                "body1": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "0.875rem",
                  "fontWeight": 400,
                  "lineHeight": "1.46429em",
                },
                "body1Next": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "1rem",
                  "fontWeight": 400,
                  "letterSpacing": "0.00938em",
                  "lineHeight": 1.5,
                },
                "body2": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "0.875rem",
                  "fontWeight": 500,
                  "lineHeight": "1.71429em",
                },
                "body2Next": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "0.875rem",
                  "fontWeight": 400,
                  "letterSpacing": "0.01071em",
                  "lineHeight": 1.5,
                },
                "button": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "0.875rem",
                  "fontWeight": 500,
                  "textTransform": "uppercase",
                },
                "buttonNext": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "0.875rem",
                  "fontWeight": 500,
                  "letterSpacing": "0.02857em",
                  "lineHeight": 1.75,
                  "textTransform": "uppercase",
                },
                "caption": Object {
                  "color": "rgba(0, 0, 0, 0.54)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "0.75rem",
                  "fontWeight": 400,
                  "lineHeight": "1.375em",
                },
                "captionNext": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "0.75rem",
                  "fontWeight": 400,
                  "letterSpacing": "0.03333em",
                  "lineHeight": 1.66,
                },
                "display1": Object {
                  "color": "rgba(0, 0, 0, 0.54)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "2.125rem",
                  "fontWeight": 400,
                  "lineHeight": "1.20588em",
                },
                "display2": Object {
                  "color": "rgba(0, 0, 0, 0.54)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "2.8125rem",
                  "fontWeight": 400,
                  "lineHeight": "1.13333em",
                  "marginLeft": "-.02em",
                },
                "display3": Object {
                  "color": "rgba(0, 0, 0, 0.54)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "3.5rem",
                  "fontWeight": 400,
                  "letterSpacing": "-.02em",
                  "lineHeight": "1.30357em",
                  "marginLeft": "-.02em",
                },
                "display4": Object {
                  "color": "rgba(0, 0, 0, 0.54)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "7rem",
                  "fontWeight": 300,
                  "letterSpacing": "-.04em",
                  "lineHeight": "1.14286em",
                  "marginLeft": "-.04em",
                },
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": 14,
                "fontWeightLight": 300,
                "fontWeightMedium": 500,
                "fontWeightRegular": 400,
                "h1": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "6rem",
                  "fontWeight": 300,
                  "letterSpacing": "-0.01562em",
                  "lineHeight": 1,
                },
                "h2": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "3.75rem",
                  "fontWeight": 300,
                  "letterSpacing": "-0.00833em",
                  "lineHeight": 1,
                },
                "h3": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "3rem",
                  "fontWeight": 400,
                  "letterSpacing": "0em",
                  "lineHeight": 1.04,
                },
                "h4": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "2.125rem",
                  "fontWeight": 400,
                  "letterSpacing": "0.00735em",
                  "lineHeight": 1.17,
                },
                "h5": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "1.5rem",
                  "fontWeight": 400,
                  "letterSpacing": "0em",
                  "lineHeight": 1.33,
                },
                "h6": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "1.25rem",
                  "fontWeight": 500,
                  "letterSpacing": "0.0075em",
                  "lineHeight": 1.6,
                },
                "headline": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "1.5rem",
                  "fontWeight": 400,
                  "lineHeight": "1.35417em",
                },
                "overline": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "0.75rem",
                  "fontWeight": 400,
                  "letterSpacing": "0.08333em",
                  "lineHeight": 2.66,
                  "textTransform": "uppercase",
                },
                "pxToRem": [Function],
                "round": [Function],
                "subheading": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "1rem",
                  "fontWeight": 400,
                  "lineHeight": "1.5em",
                },
                "subtitle1": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "1rem",
                  "fontWeight": 400,
                  "letterSpacing": "0.00938em",
                  "lineHeight": 1.75,
                },
                "subtitle2": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "0.875rem",
                  "fontWeight": 500,
                  "letterSpacing": "0.00714em",
                  "lineHeight": 1.57,
                },
                "title": Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "1.3125rem",
                  "fontWeight": 500,
                  "lineHeight": "1.16667em",
                },
                "useNextVariants": false,
              },
              "zIndex": Object {
                "appBar": 1100,
                "drawer": 1200,
                "mobileStepper": 1000,
                "modal": 1300,
                "snackbar": 1400,
                "tooltip": 1500,
              },
            }
          }
          title="test"
        >
          <RootRef
            rootRef={[Function]}
          >
            <span
              aria-describedby={null}
              aria-haspopup="false"
              aria-owns={null}
              className="IconButton-spanIconButton-7"
              key="iconButton"
              onBlur={[Function]}
              onFocus={[Function]}
              onMouseLeave={[Function]}
              onMouseOver={[Function]}
              onTouchEnd={[Function]}
              onTouchStart={[Function]}
              title="test"
            >
              <WithStyles(IconButton)
                className="bottom"
                debounce={200}
                disabled={false}
                onClick={[Function]}
                placement="bottom"
                size="normal"
                tooltip="test"
                type="button"
              >
                <IconButton
                  className="bottom"
                  classes={
                    Object {
                      "colorInherit": "MuiIconButton-colorInherit-21",
                      "colorPrimary": "MuiIconButton-colorPrimary-22",
                      "colorSecondary": "MuiIconButton-colorSecondary-23",
                      "disabled": "MuiIconButton-disabled-24",
                      "label": "MuiIconButton-label-25",
                      "root": "MuiIconButton-root-20",
                    }
                  }
                  color="default"
                  debounce={200}
                  disabled={false}
                  onClick={[Function]}
                  placement="bottom"
                  size="normal"
                  tooltip="test"
                  type="button"
                >
                  <WithStyles(ButtonBase)
                    centerRipple={true}
                    className="MuiIconButton-root-20 bottom"
                    debounce={200}
                    disabled={false}
                    focusRipple={true}
                    onClick={[Function]}
                    placement="bottom"
                    size="normal"
                    tooltip="test"
                    type="button"
                  >
                    <ButtonBase
                      centerRipple={true}
                      className="MuiIconButton-root-20 bottom"
                      classes={
                        Object {
                          "disabled": "MuiButtonBase-disabled-27",
                          "focusVisible": "MuiButtonBase-focusVisible-28",
                          "root": "MuiButtonBase-root-26",
                        }
                      }
                      component="button"
                      debounce={200}
                      disableRipple={false}
                      disableTouchRipple={false}
                      disabled={false}
                      focusRipple={true}
                      onClick={[Function]}
                      placement="bottom"
                      size="normal"
                      tabIndex="0"
                      tooltip="test"
                      type="button"
                    >
                      <button
                        className="MuiButtonBase-root-26 MuiIconButton-root-20 bottom"
                        debounce={200}
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onContextMenu={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        placement="bottom"
                        size="normal"
                        tabIndex="0"
                        tooltip="test"
                        type="button"
                      >
                        <span
                          className="MuiIconButton-label-25"
                        />
                        <NoSsr
                          defer={false}
                          fallback={null}
                        >
                          <WithStyles(TouchRipple)
                            center={true}
                            innerRef={[Function]}
                          >
                            <TouchRipple
                              center={true}
                              classes={
                                Object {
                                  "child": "MuiTouchRipple-child-33",
                                  "childLeaving": "MuiTouchRipple-childLeaving-34",
                                  "childPulsate": "MuiTouchRipple-childPulsate-35",
                                  "ripple": "MuiTouchRipple-ripple-30",
                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate-32",
                                  "rippleVisible": "MuiTouchRipple-rippleVisible-31",
                                  "root": "MuiTouchRipple-root-29",
                                }
                              }
                            >
                              <TransitionGroup
                                childFactory={[Function]}
                                className="MuiTouchRipple-root-29"
                                component="span"
                                enter={true}
                                exit={true}
                              >
                                <span
                                  className="MuiTouchRipple-root-29"
                                />
                              </TransitionGroup>
                            </TouchRipple>
                          </WithStyles(TouchRipple)>
                        </NoSsr>
                      </button>
                    </ButtonBase>
                  </WithStyles(ButtonBase)>
                </IconButton>
              </WithStyles(IconButton)>
            </span>
          </RootRef>
          <Popper
            className="MuiTooltip-popper-36"
            disablePortal={false}
            id={null}
            open={false}
            placement="bottom"
            transition={true}
          />
        </Tooltip>
      </WithStyles(Tooltip)>
    </div>
  </IconButton>
</WithStyles(IconButton)>
`;
